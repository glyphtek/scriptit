name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    name: Test on ${{ matrix.runtime }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        runtime: [bun, node]
        include:
          - runtime: bun
            version: latest
          - runtime: node
            version: 18

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Bun
        if: matrix.runtime == 'bun'
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: ${{ matrix.version }}

      - name: Setup Node.js
        if: matrix.runtime == 'node'
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.version }}

      - name: Install dependencies (Bun)
        if: matrix.runtime == 'bun'
        run: bun install

      - name: Install dependencies (Node)
        if: matrix.runtime == 'node'
        run: npm install

      - name: Build project (Bun)
        if: matrix.runtime == 'bun'
        run: bun run build

      - name: Build project (Node)
        if: matrix.runtime == 'node'
        run: npm run build:node

      - name: Run tests (Bun)
        if: matrix.runtime == 'bun'
        run: bun test

      - name: Run tests (Node)
        if: matrix.runtime == 'node'
        run: |
          echo "Node.js compatibility verification..."
          ./bin/scriptit.sh --version
          ./bin/scriptit.sh --help
          echo "âœ… Node.js compatibility verified"

  lint:
    name: Lint and Format Check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v1

      - name: Install dependencies
        run: bun install

      - name: Run linting
        run: bun run lint

      - name: Check formatting
        run: bun run check

  docs:
    name: Build Documentation
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v1

      - name: Install dependencies
        run: bun install

      - name: Build documentation
        run: bun run docs:build

      - name: Upload docs artifact
        uses: actions/upload-artifact@v4
        with:
          name: documentation
          path: docs/.vitepress/dist/

  security:
    name: Security Audit
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v1

      - name: Install dependencies
        run: bun install

      - name: Run security audit
        run: bun audit || true  # Don't fail on audit issues for now

  type-check:
    name: TypeScript Type Check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v1

      - name: Install dependencies
        run: bun install

      - name: Type check
        run: bunx tsc --noEmit 