name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        runtime: [node, bun]
        include:
          - runtime: node
            version: '18'
          - runtime: node
            version: '20'
          - runtime: bun
            version: 'latest'

    steps:
    - uses: actions/checkout@v4

    - name: Setup Node.js
      if: matrix.runtime == 'node'
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.version }}
        cache: 'npm'

    - name: Setup Bun
      if: matrix.runtime == 'bun'
      uses: oven-sh/setup-bun@v1
      with:
        bun-version: ${{ matrix.version }}

    - name: Install dependencies (Node.js)
      if: matrix.runtime == 'node'
      run: npm ci

    - name: Install dependencies (Bun)
      if: matrix.runtime == 'bun'
      run: bun install --frozen-lockfile

    - name: Lint
      run: |
        if [ "${{ matrix.runtime }}" = "bun" ]; then
          bun run lint
        else
          npx @biomejs/biome lint ./src
        fi

    - name: Build
      run: |
        if [ "${{ matrix.runtime }}" = "bun" ]; then
          bun run build
        else
          npx tsc
        fi

    - name: Test
      run: |
        if [ "${{ matrix.runtime }}" = "bun" ]; then
          bun test
        else
          npm test
        fi

    - name: Test CLI
      run: |
        if [ "${{ matrix.runtime }}" = "bun" ]; then
          bun ./bin/scriptit.js --help
        else
          node ./bin/scriptit.js --help
        fi

  publish-check:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Build
      run: npm run build
    
    - name: Check package
      run: npm pack --dry-run 