name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test-bun:
    name: Test with Bun
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4

    - name: Setup Bun
      uses: oven-sh/setup-bun@v1
      with:
        bun-version: 'latest'

    - name: Install dependencies
      run: bun install --frozen-lockfile

    - name: Lint
      run: bun run lint

    - name: Build
      run: bun run build

    - name: Test
      run: bun test

    - name: Test CLI
      run: bun ./bin/scriptit.js --help

  test-node:
    name: Test with Node.js
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: ['18', '20']

    steps:
    - uses: actions/checkout@v4

    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}

    - name: Install dependencies
      run: npm install

    - name: Lint
      run: npx @biomejs/biome lint ./src

    - name: Build
      run: npx tsc

    - name: Test CLI
      run: node ./bin/scriptit.js --help

    - name: Test library import
      run: node -e "import('./dist/lib.js').then(() => console.log('✅ Library import successful'))"

  publish-check:
    name: Package verification
    runs-on: ubuntu-latest
    needs: [test-bun, test-node]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Bun
      uses: oven-sh/setup-bun@v1
      with:
        bun-version: 'latest'
    
    - name: Install dependencies
      run: bun install --frozen-lockfile
    
    - name: Build
      run: bun run build
    
    - name: Check package contents
      run: bun x npm pack --dry-run
    
    - name: Verify package size
      run: |
        SIZE=$(bun x npm pack --dry-run 2>&1 | grep "package size" | awk '{print $3}')
        echo "Package size: $SIZE"
        # Ensure package is reasonable size (less than 100kB)
        if [[ $(echo "$SIZE" | sed 's/[^0-9.]//g') > 100 ]]; then
          echo "❌ Package too large: $SIZE"
          exit 1
        else
          echo "✅ Package size acceptable: $SIZE"
        fi 